networks:
  net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.196.0/24

services:
  nginx:
    image: registry.cn-beijing.aliyuncs.com/aqxgx/nginx:1.24-bullseye
    container_name: xmes-nginx
    restart: always
    volumes:
      - ./utils/nginx.conf:/etc/nginx/nginx.conf:r
      - ./data/logs:/var/log/nginx
    ports:
      - "8896:8896"
    networks:
      - net

  postgresql:
    image: registry.cn-beijing.aliyuncs.com/aqxgx/postgres:16.7
    container_name: xmes-postgresql
    restart: always
    command: [ "postgres","-c","max_connections=8000" ]
    environment:
      TZ: ${TZ:-Asia/Shanghai}
      POSTGRES_DB: ${DB_DATABASE:-xmes}
      POSTGRES_USER: ${DB_USER:-server}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-KGzKjZpWBp4R4RSa}
    volumes:
      - ${VOLUME_DIR:-../}/xmes-postgresql/data:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -q -U $$POSTGRES_USER -d $$POSTGRES_DB"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - net

  redis:
    image: registry.cn-beijing.aliyuncs.com/aqxgx/redis:7.4.2
    container_name: xmes-redis
    hostname: xmes-redis
    restart: always
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD:-nineven}", "--port", "${REDIS_PORT:-6379}" ]
    environment:
      TZ: ${TZ:-Asia/Shanghai}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-nineven}
    volumes:
      - ${VOLUME_DIR:-../}/xmes-redis/data:/data
    healthcheck:
      test: "redis-cli -h 127.0.0.1 -p $$REDIS_PORT -a $$REDIS_PASSWORD info Replication"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - net

  server:
    image: xmes_server
    container_name: xmes_server
    hostname: xmes_server
    build:
      context: .
      dockerfile: Dockerfile-dev
    ulimits:
      core: 0
    restart: always
    privileged: true
    command: start web
    volumes:
      - ./:/data/xmes_server
    #      - ${VOLUME_DIR:-.}/server/data:/data/xmes_server/data
    healthcheck:
      test: "curl -fsL http://localhost:8896/api/common/api/health > /dev/null"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    depends_on:
      - nginx
      - postgresql
      - redis
    networks:
      - net

  celery:
    image: xmes_server
    container_name: xmes-celery
    hostname: xmes-celery
    build:
      context: .
      dockerfile: Dockerfile-dev
    ulimits:
      core: 0
    restart: always
    privileged: true
    command: start task
    volumes:
      - ./:/data/xmes_server
    #      - ${VOLUME_DIR:-.}/server/data:/data/xmes_server/data
    healthcheck:
      test: "bash utils/check_celery.sh"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    depends_on:
      - postgresql
      - redis
    networks:
      - net